on: pull_request

env:
  # Set this to your local timezone. See https://www.wikiwand.com/en/List_of_tz_database_time_zones for valid strings.
  Timezone: UTC
  # Set this to the output folder for all of the generated files. Unless you have a very
  # good reason to change this you should leave it as KiBotOutput.
  OutputFolder: KiriOutput
  Project: ${{ github.event.repository.name }}
  
  OpamVersion: 4.09.1

jobs:
  example_comment_pr:
    runs-on: ubuntu-latest
    name: An example job to comment a PR
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      # Get the version of the GitHub release for use later.
      - name: Get GitHub release version
        id: get_github_version
        uses: battila7/get-version-action@v2
        if: startsWith(github.ref, 'refs/tags/')
      - name: Store GitHub release version
        id: save_github_version
        run: echo "version=${{ steps.get_github_version.outputs.version }}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')
      
      - name: Use OCaml ${{ env.OpamVersion }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ env.OpamVersion }}
      
      - name: Install dependencies
        run: |
          opam pin add kicadsch .
          opam pin add plotkicadsch .
          opam update
          opam install plotkicadsch
          
          pip3 install pygubu
          pip3 install python_dateutil
          pip3 install tk

      - name: Run plotkicadsch
        run: |
          plotgitsch -k master ${{ env.version }}
      
      - name: Upload plotkicadsch diff
        if: ${{ failure() }}
        uses: edunad/actions-image@v1.0.1
        with:
            path: ./*.svg
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            title: 'Kiri diff'
      
      # Archive all the artifacts from output and attach to the action's results.
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{ env.OutputFolder }}
          path: ./*.svg
